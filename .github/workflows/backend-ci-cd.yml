name: Backend CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: landlord_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: xdebug
    
    - name: Copy .env
      run: cp .env.example .env
    
    - name: Create necessary directories
      run: mkdir -p bootstrap/cache
    
    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Run migrations
      run: php artisan migrate
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: landlord_test
        DB_USERNAME: root
        DB_PASSWORD: root
    
    - name: Run tests
      run: php artisan test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Node dependencies
      run: npm ci
        
    - name: Build assets
      run: npm run build
    
    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Deploy to Oracle VM
      run: |
        # Primeiro, vamos adicionar o host ao known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
        
        # Executar o deploy através de SSH
        ssh ${{ secrets.SSH_USER }}@${{ secrets.VM_HOST }} << 'ENDSSH'
          cd /caminho/para/aplicacao
          git pull origin main
          composer install --no-interaction --prefer-dist --optimize-autoloader
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          # Se necessário, reiniciar serviços
          sudo systemctl restart nginx
          sudo systemctl restart php8.2-fpm
        ENDSSH 