name: Backend CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: landlord_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: xdebug
        ini-file: production
    
    - name: Create necessary directories
      run: |
        mkdir -p bootstrap/cache
        mkdir -p storage/framework/views
        mkdir -p storage/framework/cache
        mkdir -p storage/framework/sessions
        chmod -R 775 storage
        chmod -R 775 bootstrap/cache
      
    - name: Copy .env
      run: cp .env.example .env
    
    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Run migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_PORT: 3306
        DB_HOST: 127.0.0.1
        DB_DATABASE: landlord_test
        DB_USERNAME: root
        DB_PASSWORD: root
    
    - name: Execute tests via PHPUnit
      run: vendor/bin/phpunit
      env:
        DB_CONNECTION: mysql
        DB_PORT: 3306
        DB_HOST: 127.0.0.1
        DB_DATABASE: landlord_test
        DB_USERNAME: root
        DB_PASSWORD: root
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa 158.180.17.161 >> ~/.ssh/known_hosts
      
      - name: Deploy to VM Server
        run: |
          ssh -v -o StrictHostKeyChecking=no ubuntu@158.180.17.161 '
            cd ~/projects/all-in-one
            git fetch origin
            git reset --hard origin/main
            
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            sudo systemctl restart nginx
            sudo systemctl restart php8.2-fpm
          ' 